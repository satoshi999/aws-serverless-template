AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'SAM Template

  '
Globals:
  Function:
    Timeout: 3
  Api:
    Cors: '''*'''
Resources:
  GetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://sample-ap-northeast-1-dev/8ba03289902ecb7e53ae431480ba00c7
      Handler: app.lambdaHandler
      Runtime: nodejs10.x
      Events:
        Get:
          Type: Api
          Properties:
            Path: /get
            Method: get
      Environment:
        Variables:
          ENV:
            Ref: ENV
      Policies:
      - DynamoDBReadPolicy:
          TableName: '*'
  ScanFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://sample-ap-northeast-1-dev/22dd2c4d41257b654f927533554ee82e
      Handler: app.lambdaHandler
      Runtime: nodejs10.x
      Events:
        Get:
          Type: Api
          Properties:
            Path: /scan
            Method: get
      Environment:
        Variables:
          ENV:
            Ref: ENV
      Policies:
      - DynamoDBReadPolicy:
          TableName: '*'
  QueryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://sample-ap-northeast-1-dev/611f01594a60a1b47497ff003e96ebc0
      Handler: app.lambdaHandler
      Runtime: nodejs10.x
      Events:
        Get:
          Type: Api
          Properties:
            Path: /query
            Method: get
      Environment:
        Variables:
          ENV:
            Ref: ENV
      Policies:
      - DynamoDBReadPolicy:
          TableName: '*'
  PutFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://sample-ap-northeast-1-dev/0d199aeb9cb14cb6a305484b1ee84fd8
      Handler: app.lambdaHandler
      Runtime: nodejs10.x
      Events:
        Get:
          Type: Api
          Properties:
            Path: /put
            Method: put
      Environment:
        Variables:
          ENV:
            Ref: ENV
      Policies:
      - DynamoDBCrudPolicy:
          TableName: '*'
Parameters:
  ENV:
    Type: String
Outputs:
  GetApi:
    Description: API Gateway endpoint URL for Prod stage for Get function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get/
  GetFunction:
    Description: Get Lambda Function ARN
    Value:
      Fn::GetAtt:
      - GetFunction
      - Arn
  GetFunctionIamRole:
    Description: Implicit IAM Role created for Get function
    Value:
      Fn::GetAtt:
      - GetFunctionRole
      - Arn
  ScanApi:
    Description: API Gateway endpoint URL for Prod stage for Scan function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/scan/
  ScanFunction:
    Description: Scan Lambda Function ARN
    Value:
      Fn::GetAtt:
      - GetFunction
      - Arn
  ScanFunctionIamRole:
    Description: Implicit IAM Role created for Scan function
    Value:
      Fn::GetAtt:
      - ScanFunctionRole
      - Arn
  QueryApi:
    Description: API Gateway endpoint URL for Prod stage for Query function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/query/
  QueryFunction:
    Description: Query Lambda Function ARN
    Value:
      Fn::GetAtt:
      - QueryFunction
      - Arn
  QueryFunctionIamRole:
    Description: Implicit IAM Role created for Query function
    Value:
      Fn::GetAtt:
      - QueryFunctionRole
      - Arn
  PutApi:
    Description: API Gateway endpoint URL for Prod stage for Put function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/put/
  PutFunction:
    Description: Query Lambda Function ARN
    Value:
      Fn::GetAtt:
      - PutFunction
      - Arn
  PutFunctionIamRole:
    Description: Implicit IAM Role created for Put function
    Value:
      Fn::GetAtt:
      - PutFunctionRole
      - Arn
